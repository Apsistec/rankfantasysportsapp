rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
		function isSignedIn() {
    	return request.auth != null;
    }
    function isGold() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gold;
    }
    function isSilver() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.silver;
    }
    function isBronze() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.bronze;
    }
    function isPaid() {
    	return (isGold() == true || isSilver() == true || isBronze() == true);
    }
    function isUser(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

		function userEmail(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.email;
    }

    function emailVerified() {
      return request.auth.token.email_verified;
    }
  
    function isValidMember() {
    	return isSignedIn() && isPaid();
    }
        match /{document=**} {
          allow read: if isValidMember() || isAdmin();
      	}
        match /users/{userId} {
        	allow read, create, update: if request.auth.uid == userId || isAdmin();
          allow delete: if isAdmin();
      	}
        match /tickets/{ticket} {
          allow read: if request.auth.uid != null || isAdmin();
          allow create: if request.auth.uid != null || isAdmin();
          allow update, delete: if isAdmin();
     }
     
	 }
}
