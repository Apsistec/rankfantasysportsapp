rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
		
    function isSignedIn() {
    	return request.auth != null;
    }
    
    function isTrialing() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'trialing';
    }
    
    function isActive() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'active';
    }
    
    function isUser() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'USER';
    }
    
    function isAdmin() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    function isSubscriber() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'SUBSCRIBER';
    }
    
    function isRegistered() {
    	return isAdmin() || isSubscriber() || isUser();
    }

    function isValidMember() {
    	return isRegistered() && isSignedIn() && (isActive() || isTrialing());
    }
        match /{document=**} {
          allow read: if isValidMember() || isAdmin();
          allow write: if isAdmin();
      	}
        match /users/{userId} {
        	allow read, create, update: if request.auth.uid == userId || isAdmin();
          allow delete: if isAdmin();
      	}
        match /tickets/{ticket} {
          allow read, create, update: if isRegistered() || isAdmin();
          allow delete: if isAdmin();
     }
        match /posts/{post} {
          allow read, create, update: if isRegistered() || isAdmin();
          allow delete: if isAdmin();
     }
     
	 }
}
